@model Freelance.Models.LoginViewModel

<div class="modal fade" data-backdrop="false" id="loginModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Modal title</h4>
            </div>
            <div class="modal-body">
                <!-- bradcam_area  -->
                <div class="bradcam_area bradcam_bg_1">
                    <div class="container">
                        <div class="row">
                            <div class="col-xl-12">
                                <div class="bradcam_text">
                                    <h3>Login</h3>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- job_details_area  -->

                <div class="job_details_area">
                    <div class="container">
                        <div class="row">
                            <div class="col-lg-3 col-md-3"></div>
                            <div class="col-lg-6 col-md-6" style="border: 1px solid #00D363; background: white;padding: 30px;">
                                @using (Html.BeginForm("Login", "Account", FormMethod.Post, new { role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary("", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Email)
                                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Enter email" })
                                        @Html.ValidationMessageFor(m => m.Email)
                                        <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Password)
                                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
                                        @Html.ValidationMessageFor(m => m.Password)
                                    </div>
                                    <div class="form-check">
                                        <div class="checkbox">
                                            @Html.CheckBoxFor(m => m.RememberMe, new { @class = "form-check-input" })
                                            @Html.LabelFor(m => m.RememberMe, new { @class = "form-check-label" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                            <button type="submit" class="btn btn-default">Log in</button>
                                    </div>
                                    }
                                </div>
                        </div>
                    </div>
                </div>
            </div>
            @*<div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>*@
        </div>
    </div>
</div>

@*@using Microsoft.AspNet.Identity
    @if (Request.IsAuthenticated)
    {
        using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
        {
        @Html.AntiForgeryToken()

        <ul class="nav navbar-nav navbar-right">
            <li>
                @Html.ActionLink("Hello " + User.Identity.GetUserName() + "!", "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage" })
            </li>
            <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
        </ul>
        }
    }
    else
    {
        <ul class="nav navbar-nav navbar-right">
            <li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
            <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
        </ul>
    }*@
